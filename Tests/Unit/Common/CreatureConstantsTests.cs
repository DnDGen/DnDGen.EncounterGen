using EncounterGen.Common;
using NUnit.Framework;
using System;

namespace EncounterGen.Tests.Unit.Common
{
    [TestFixture]
    public class CreatureConstantsTests
    {
        [TestCase(CreatureConstants.Allip, "Allip")]
        [TestCase(CreatureConstants.Ankheg, "Ankheg")]
        [TestCase(CreatureConstants.Ant_Giant, "Giant ant")]
        [TestCase(CreatureConstants.AstralDeva, "Astral deva (celestial)")]
        [TestCase(CreatureConstants.Balor, "Balor (demon)")]
        [TestCase(CreatureConstants.Beholder, "Beholder")]
        [TestCase(CreatureConstants.Boar_Dire, "Dire boar")]
        [TestCase(CreatureConstants.Bugbear, "Bugbear")]
        [TestCase(CreatureConstants.CarrionCrawler, "Carrion crawler")]
        [TestCase(CreatureConstants.Centipede_Monstrous_Large, "Large monstrous centipede")]
        [TestCase(CreatureConstants.Centipede_Monstrous_Medium, "Medium monstrous centipede")]
        [TestCase(CreatureConstants.Character, "Character")]
        [TestCase(CreatureConstants.Choker, "Choker")]
        [TestCase(CreatureConstants.Cornugon, "Cornugon (devil)")]
        [TestCase(CreatureConstants.Cryohydra, "Cryohydra")]
        [TestCase(CreatureConstants.Darkmantle, "Darkmantle")]
        [TestCase(CreatureConstants.Dragon, "Dragon")]
        [TestCase(CreatureConstants.Dragon_Black_VeryOld, "Very old black dragon")]
        [TestCase(CreatureConstants.DwarfWarrior, "Dwarf warrior")]
        [TestCase(CreatureConstants.ElfWarrior, "Elf warrior")]
        [TestCase(CreatureConstants.EtherealMarauder, "Ethereal marauder")]
        [TestCase(CreatureConstants.Ettercap, "Ettercap")]
        [TestCase(CreatureConstants.FireBeetle_Giant, "Giant fire beetle")]
        [TestCase(CreatureConstants.FormianWarrior, "Formian warrior")]
        [TestCase(CreatureConstants.FormianWorker, "Formian worker")]
        [TestCase(CreatureConstants.Gelugon, "Gelugon (devil)")]
        [TestCase(CreatureConstants.Ghaeles, "Ghaeles (celestial)")]
        [TestCase(CreatureConstants.Ghost, "Ghost")]
        [TestCase(CreatureConstants.Ghoul, "Ghoul")]
        [TestCase(CreatureConstants.Giant_Cloud, "Cloud giant")]
        [TestCase(CreatureConstants.Giant_Frost, "Frost giant")]
        [TestCase(CreatureConstants.Giant_Storm, "Storm giant")]
        [TestCase(CreatureConstants.Glabrezu, "Glabrezu (demon)")]
        [TestCase(CreatureConstants.Gnoll, "Gnoll")]
        [TestCase(CreatureConstants.Goblin, "Goblin")]
        [TestCase(CreatureConstants.Golem_Stone, "Stone golem")]
        [TestCase(CreatureConstants.Hamatula, "Hamatula (devil)")]
        [TestCase(CreatureConstants.Hezrou, "Hezrou (demon)")]
        [TestCase(CreatureConstants.Hobgoblin, "Hobgoblin")]
        [TestCase(CreatureConstants.Hyena, "Hyena")]
        [TestCase(CreatureConstants.Imp, "Imp (devil)")]
        [TestCase(CreatureConstants.Kobold, "Kobold")]
        [TestCase(CreatureConstants.Krenshar, "Krenshar")]
        [TestCase(CreatureConstants.LanternArchon, "Lantern archon (celestial)")]
        [TestCase(CreatureConstants.Lemure, "Lemure (devil)")]
        [TestCase(CreatureConstants.Lich, "Lich")]
        [TestCase(CreatureConstants.Lion_Dire, "Dire lion")]
        [TestCase(CreatureConstants.Lizard_Giant, "Giant lizard")]
        [TestCase(CreatureConstants.Lizardfolk, "Lizardfolk")]
        [TestCase(CreatureConstants.Magmin, "Magmin")]
        [TestCase(CreatureConstants.Marilith, "Marilith (demon)")]
        [TestCase(CreatureConstants.Mimic, "Mimic")]
        [TestCase(CreatureConstants.MindFlayer, "Mind flayer")]
        [TestCase(CreatureConstants.Naga_Spirit, "Spirit naga")]
        [TestCase(CreatureConstants.Nalfeshnee, "Nalfeshnee (demon)")]
        [TestCase(CreatureConstants.Nightcrawler, "Nightcrawler (nightshade)")]
        [TestCase(CreatureConstants.Nightwalker, "Nightwalker (nightshade)")]
        [TestCase(CreatureConstants.Ogre, "Ogre")]
        [TestCase(CreatureConstants.Ooze_Gray, "Gray ooze")]
        [TestCase(CreatureConstants.Orc, "Orc")]
        [TestCase(CreatureConstants.PitFiend, "Pit fiend (devil)")]
        [TestCase(CreatureConstants.Planetar, "Planetar (celestial)")]
        [TestCase(CreatureConstants.PurpleWorm, "Purple worm")]
        [TestCase(CreatureConstants.Pyrohydra, "Pyrohydra")]
        [TestCase(CreatureConstants.Quasit, "Quasit (demon)")]
        [TestCase(CreatureConstants.Rat_Dire, "Dire rat")]
        [TestCase(CreatureConstants.RustMonster, "Rust monster")]
        [TestCase(CreatureConstants.Salamander_Large, "Large salamander")]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Colossal, "Colossal monstrous scorpion")]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Medium, "Medium monstrous scorpion")]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Small, "Small monstrous scorpion")]
        [TestCase(CreatureConstants.Shrieker, "Shrieker")]
        [TestCase(CreatureConstants.Skeleton_HumanWarrior, "Human warrior skeleton")]
        [TestCase(CreatureConstants.Slaadi_Death, "Death slaadi")]
        [TestCase(CreatureConstants.Slaadi_Green, "Green slaadi")]
        [TestCase(CreatureConstants.Snake_Viper_Huge, "Huge viper snake")]
        [TestCase(CreatureConstants.Snake_Viper_Tiny, "Tiny viper snake")]
        [TestCase(CreatureConstants.Solar, "Solar (celestial)")]
        [TestCase(CreatureConstants.Spider_Monstrous_Medium, "Medium monstrous spider")]
        [TestCase(CreatureConstants.Spider_Monstrous_Small, "Small monstrous spider")]
        [TestCase(CreatureConstants.Stirge, "Stirge")]
        [TestCase(CreatureConstants.Vampire, "Vampire")]
        [TestCase(CreatureConstants.VampireSpawn, "Vampire spawn")]
        [TestCase(CreatureConstants.VioletFungi, "Violet fungi")]
        [TestCase(CreatureConstants.Vrock, "Vrock (demon)")]
        [TestCase(CreatureConstants.Weasel_Dire, "Dire weasel")]
        [TestCase(CreatureConstants.Wight, "Wight")]
        [TestCase(CreatureConstants.Worg, "Worg")]
        [TestCase(CreatureConstants.Yrthak, "Yrthak")]
        [TestCase(CreatureConstants.Zombie_HumanCommoner, "Human commoner zombie")]
        public void Constant(String constant, String value)
        {
            Assert.That(constant, Is.EqualTo(value));
        }
    }
}
