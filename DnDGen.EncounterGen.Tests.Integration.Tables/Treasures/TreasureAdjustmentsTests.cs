using DnDGen.EncounterGen.Models;
using DnDGen.EncounterGen.Selectors;
using DnDGen.EncounterGen.Tables;
using NUnit.Framework;
using System;
using System.Linq;

namespace DnDGen.EncounterGen.Tests.Integration.Tables.Treasures
{
    [TestFixture]
    public class TreasureAdjustmentsTests : CollectionTests
    {
        protected override string tableName
        {
            get
            {
                return TableNameConstants.TreasureRates;
            }
        }

        [Test]
        public override void EntriesAreComplete()
        {
            var allCreatures = GetAllCreaturesFromEncounters();
            var useSubtypeForTreasure = collectionSelector.Explode(TableNameConstants.CreatureGroups, GroupConstants.UseSubtypeForTreasure);
            allCreatures = allCreatures.Except(useSubtypeForTreasure);

            AssertEntriesAreComplete(allCreatures);
        }

        [TestCase(CreatureConstants.Aasimar_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Aboleth, 2, 2, 2)]
        [TestCase(CreatureConstants.Aboleth_Mage, 2, 2, 2)]
        [TestCase(CreatureConstants.Achaierai, 2, 2, 2)]
        [TestCase(CreatureConstants.Allip, 0, 0, 0)]
        [TestCase(CreatureConstants.Androsphinx, 1, 1, 1)]
        [TestCase(CreatureConstants.AnimatedObject_Colossal, 0, 0, 0)]
        [TestCase(CreatureConstants.AnimatedObject_Gargantuan, 0, 0, 0)]
        [TestCase(CreatureConstants.AnimatedObject_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.AnimatedObject_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.AnimatedObject_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.AnimatedObject_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.AnimatedObject_Tiny, 0, 0, 0)]
        [TestCase(CreatureConstants.Ankheg, 0, 0, 0)]
        [TestCase(CreatureConstants.Annis, 1, 1, 1)]
        [TestCase(CreatureConstants.Ant_Giant_Soldier, 0, 0, 0)]
        [TestCase(CreatureConstants.Ant_Giant_Worker, 0, 0, 0)]
        [TestCase(CreatureConstants.Ant_Giant_Queen, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Ape, 0, 0, 0)]
        [TestCase(CreatureConstants.Ape_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Aranea, 1, 2, 1)]
        [TestCase(CreatureConstants.Arrowhawk_Adult, 0, 0, 0)]
        [TestCase(CreatureConstants.Arrowhawk_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.Arrowhawk_Juvenile, 0, 0, 0)]
        [TestCase(CreatureConstants.AssassinVine, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.AstralDeva, 0, 2, 1)]
        [TestCase(CreatureConstants.Athach, TreasureConstants.FiftyPercent, 2, 1)]
        [TestCase(CreatureConstants.Avoral, 0, 2, 1)]
        [TestCase(CreatureConstants.Azer, 1, 2, 1)]
        [TestCase(CreatureConstants.Azer_Captain, 1, 2, 1)]
        [TestCase(CreatureConstants.Azer_Leader, 1, 2, 1)]
        [TestCase(CreatureConstants.Azer_Lieutenant, 1, 2, 1)]
        [TestCase(CreatureConstants.Azer_Sergeant, 1, 2, 1)]
        [TestCase(CreatureConstants.Babau, 1, 1, 1)]
        [TestCase(CreatureConstants.Baboon, 0, 0, 0)]
        [TestCase(CreatureConstants.Badger, 0, 0, 0)]
        [TestCase(CreatureConstants.Badger_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Badger_Celestial, 0, 0, 0)]
        [TestCase(CreatureConstants.Balor, 1, 2, 1)]
        [TestCase(CreatureConstants.BeardedDevil_Barbazu, 1, 1, 1)]
        [TestCase(CreatureConstants.Barghest, 2, 2, 2)]
        [TestCase(CreatureConstants.Barghest_Greater, 2, 2, 2)]
        [TestCase(CreatureConstants.Basilisk, 0, 0, 0)]
        [TestCase(CreatureConstants.Basilisk_AbyssalGreater, 1, 1, 1)]
        [TestCase(CreatureConstants.Bat, 0, 0, 0)]
        [TestCase(CreatureConstants.Bat_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Bat_Swarm, 0, 0, 0)]
        [TestCase(CreatureConstants.Bear_Black, 0, 0, 0)]
        [TestCase(CreatureConstants.Bear_Brown, 0, 0, 0)]
        [TestCase(CreatureConstants.Bear_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Bear_Polar, 0, 0, 0)]
        [TestCase(CreatureConstants.Bee_Giant, 0, TreasureConstants.TwentyFivePercent, 0)]
        [TestCase(CreatureConstants.Bebilith, 0, 0, 0)]
        [TestCase(CreatureConstants.Behir, 1, 1, 1)]
        [TestCase(CreatureConstants.Beholder, 2, 2, 2)]
        [TestCase(CreatureConstants.Belker, 0, 0, 0)]
        [TestCase(CreatureConstants.Bison, 0, 0, 0)]
        [TestCase(CreatureConstants.BlackPudding, 0, 0, 0)]
        [TestCase(CreatureConstants.BlackPudding_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.BlinkDog, 0, 0, 0)]
        [TestCase(CreatureConstants.Boar, 0, 0, 0)]
        [TestCase(CreatureConstants.Boar_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Bodak, 0, 0, 0)]
        [TestCase(CreatureConstants.BombardierBeetle_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Bralani, 0, 2, 1)]
        [TestCase(CreatureConstants.Bugbear, 1, 1, 1)]
        [TestCase(CreatureConstants.Bugbear_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Bugbear_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Bulette, 0, 0, 0)]
        [TestCase(CreatureConstants.Camel, 0, 0, 0)]
        [TestCase(CreatureConstants.CarrionCrawler, 0, 0, 0)]
        [TestCase(CreatureConstants.Cat, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Colossal, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Gargantuan, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Tiny, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Fiendish_Colossal, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Fiendish_Gargantuan, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Fiendish_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Fiendish_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Monstrous_Fiendish_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Centipede_Swarm, 0, 0, 0)]
        [TestCase(CreatureConstants.Centaur, 1, 1, 1)]
        [TestCase(CreatureConstants.Centaur_Leader_2ndTo5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Centaur_Leader_5thTo9th, 1, 1, 1)]
        [TestCase(CreatureConstants.Centaur_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Centaur_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.ChaosBeast, 0, 0, 0)]
        [TestCase(CreatureConstants.Cheetah, 0, 0, 0)]
        [TestCase(CreatureConstants.Chimera, 1, 1, 1)]
        [TestCase(CreatureConstants.Choker, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Chuul, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, 1)]
        [TestCase(CreatureConstants.Cloaker, 1, 1, 1)]
        [TestCase(CreatureConstants.Cockatrice, 0, 0, 0)]
        [TestCase(CreatureConstants.HornedDevil_Cornugon, 1, 2, 1)]
        [TestCase(CreatureConstants.Couatl, 1, 1, 1)]
        [TestCase(CreatureConstants.Criosphinx, 1, 1, 1)]
        [TestCase(CreatureConstants.Crocodile, 0, 0, 0)]
        [TestCase(CreatureConstants.Crocodile_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Cryohydra_5Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_6Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_7Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_8Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_9Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_10Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_11Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Cryohydra_12Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Darkmantle, 0, 0, 0)]
        [TestCase(CreatureConstants.Delver, 0, 0, 0)]
        [TestCase(CreatureConstants.Derro, 1, 2, 1)]
        [TestCase(CreatureConstants.Derro_Sorcerer_3rd, 1, 2, 1)]
        [TestCase(CreatureConstants.Derro_Sorcerer_5thTo8th, 1, 2, 1)]
        [TestCase(CreatureConstants.Destrachan, 0, 0, 0)]
        [TestCase(CreatureConstants.Devourer, 0, 0, 0)]
        [TestCase(CreatureConstants.Digester, 0, 0, 0)]
        [TestCase(CreatureConstants.DisplacerBeast, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.DisplacerBeast_PackLord, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Djinni, 1, 1, 1)]
        [TestCase(CreatureConstants.Djinni_Noble, 1, 1, 1)]
        [TestCase(CreatureConstants.Dog, 0, 0, 0)]
        [TestCase(CreatureConstants.Dog_Celestial, 0, 0, 0)]
        [TestCase(CreatureConstants.Dog_Riding, 0, 0, 0)]
        [TestCase(CreatureConstants.Donkey, 0, 0, 0)]
        [TestCase(CreatureConstants.Doppelganger, 2, 2, 2)]
        [TestCase(CreatureConstants.Dragon_Black_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Black_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Blue_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Green_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Red_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_White_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Bronze_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Copper_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Silver_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Gold_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Adult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Ancient, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_GreatWyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Juvenile, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_MatureAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Old, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_VeryOld, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_VeryYoung, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Wyrm, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Wyrmling, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_Young, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragon_Brass_YoungAdult, 3, 3, 3)]
        [TestCase(CreatureConstants.DragonTurtle, 3, 3, 3)]
        [TestCase(CreatureConstants.Dragonne, 2, 2, 2)]
        [TestCase(CreatureConstants.Dretch, 0, 0, 0)]
        [TestCase(CreatureConstants.Drider, 2, 2, 2)]
        [TestCase(CreatureConstants.Drow_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Drow_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Drow_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Drow_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Drow_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Dryad, 1, 1, 1)]
        [TestCase(CreatureConstants.Duergar_Warrior, 1, 2, 1)]
        [TestCase(CreatureConstants.Duergar_Captain, 1, 2, 1)]
        [TestCase(CreatureConstants.Duergar_Leader, 1, 2, 1)]
        [TestCase(CreatureConstants.Duergar_Lieutenant, 1, 2, 1)]
        [TestCase(CreatureConstants.Duergar_Sergeant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Deep_Captain, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Deep_Leader, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Deep_Lieutenant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Deep_Sergeant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Deep_Warrior, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Hill_Captain, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Hill_Leader, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Hill_Lieutenant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Hill_Sergeant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Hill_Warrior, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Mountain_Captain, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Mountain_Leader, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Mountain_Lieutenant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Mountain_Sergeant, 1, 2, 1)]
        [TestCase(CreatureConstants.Dwarf_Mountain_Warrior, 1, 2, 1)]
        [TestCase(CreatureConstants.Eagle, 0, 0, 0)]
        [TestCase(CreatureConstants.Eagle_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Efreeti, 1, 2, 1)]
        [TestCase(CreatureConstants.Elasmosaurus, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Air_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Air_Greater, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Air_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Air_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Air_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Air_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Earth_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Earth_Greater, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Earth_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Earth_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Earth_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Earth_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Fire_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Fire_Greater, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Fire_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Fire_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Fire_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Fire_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Water_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Water_Greater, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Water_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Water_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Water_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Elemental_Water_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Elephant, 0, 0, 0)]
        [TestCase(CreatureConstants.Elf_Aquatic_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Aquatic_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Aquatic_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Aquatic_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Aquatic_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Gray_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Gray_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Gray_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Gray_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Gray_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Half_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Half_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Half_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Half_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Half_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_High_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_High_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_High_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_High_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_High_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wild_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wild_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wild_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wild_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wild_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wood_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wood_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wood_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wood_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Elf_Wood_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Deep_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Deep_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Deep_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Deep_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Deep_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Lightfoot_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Lightfoot_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Lightfoot_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Lightfoot_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Lightfoot_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Tallfellow_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Tallfellow_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Tallfellow_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Tallfellow_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Halfling_Tallfellow_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Forest_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Forest_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Forest_Lieutenant_3rd, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Forest_Lieutenant_5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Forest_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Forest_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Rock_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Rock_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Rock_Lieutenant_3rd, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Rock_Lieutenant_5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Rock_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnome_Rock_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Erinyes, 1, 1, 1)]
        [TestCase(CreatureConstants.EtherealFilcher, 0, 1, 2)]
        [TestCase(CreatureConstants.EtherealMarauder, 0, 0, 0)]
        [TestCase(CreatureConstants.Ettercap, 1, 1, 1)]
        [TestCase(CreatureConstants.Ettin, 1, 1, 1)]
        [TestCase(CreatureConstants.FireBeetle_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.FireBeetle_Giant_Celestial, 0, 0, 0)]
        [TestCase(CreatureConstants.FormianWarrior, 0, 0, 0)]
        [TestCase(CreatureConstants.FormianWorker, 0, 0, 0)]
        [TestCase(CreatureConstants.FormianTaskmaster, 1, 1, 1)]
        [TestCase(CreatureConstants.FormianMyrmarch, 1, 1, 1)]
        [TestCase(CreatureConstants.FormianQueen, 2, 2, 2)]
        [TestCase(CreatureConstants.FrostWorm, 0, 0, 0)]
        [TestCase(CreatureConstants.Gargoyle, 1, 1, 1)]
        [TestCase(CreatureConstants.Gargoyle_Kapoacinth, 1, 1, 1)]
        [TestCase(CreatureConstants.GelatinousCube, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.IceDevil_Gelugon, 1, 2, 1)]
        [TestCase(CreatureConstants.Ghaele, 0, 2, 1)]
        [TestCase(CreatureConstants.Ghost_Level1, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level2, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level3, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level4, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level5, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level6, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level7, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level8, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level9, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level10, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level11, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level12, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level13, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level14, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level15, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level16, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level17, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level18, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level19, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghost_Level20, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghoul, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghoul_Lacedon, 0, 0, 0)]
        [TestCase(CreatureConstants.Ghoul_Ghast, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Cloud, 2, 1, 2)]
        [TestCase(CreatureConstants.Giant_Cloud_Leader, 2, 1, 2)]
        [TestCase(CreatureConstants.Giant_Fire, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Fire_Adept_1stTo2nd, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Fire_Adept_3rdTo5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Fire_Adept_6thTo7th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Fire_Cleric_1stTo2nd, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Fire_Leader_6thTo7th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Fire_Sorcerer_3rdTo5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Adept_1stTo2nd, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Adept_3rdTo5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Adept_6thTo7th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Cleric_1stTo2nd, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Leader_6thTo7th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Sorcerer_3rdTo5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Frost_Jarl, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Hill, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Stone, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Stone_Elder, 1, 1, 1)]
        [TestCase(CreatureConstants.Giant_Storm, 2, 1, 2)]
        [TestCase(CreatureConstants.Giant_Storm_Leader, 2, 1, 2)]
        [TestCase(CreatureConstants.GibberingMouther, 0, 0, 0)]
        [TestCase(CreatureConstants.Girallon, 0, 0, 0)]
        [TestCase(CreatureConstants.Githyanki_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Githyanki_Fighter, 1, 1, 1)]
        [TestCase(CreatureConstants.Githyanki_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Githyanki_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Githyanki_SupremeLeader, 1, 1, 1)]
        [TestCase(CreatureConstants.Githzerai_Master, 1, 1, 1)]
        [TestCase(CreatureConstants.Githzerai_Mentor, 1, 1, 1)]
        [TestCase(CreatureConstants.Githzerai_Sensei, 1, 1, 1)]
        [TestCase(CreatureConstants.Githzerai_Student, 1, 1, 1)]
        [TestCase(CreatureConstants.Githzerai_Teacher, 1, 1, 1)]
        [TestCase(CreatureConstants.Glabrezu, 1, 2, 1)]
        [TestCase(CreatureConstants.Gnoll, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnoll_Leader_4thTo6th, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnoll_Leader_6thTo8th, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnoll_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Gnoll_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Goblin_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Goblin_Leader_4thTo6th, 1, 1, 1)]
        [TestCase(CreatureConstants.Goblin_Leader_6thTo8th, 1, 1, 1)]
        [TestCase(CreatureConstants.Goblin_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Goblin_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Golem_Clay, 0, 0, 0)]
        [TestCase(CreatureConstants.Golem_Flesh, 0, 0, 0)]
        [TestCase(CreatureConstants.Golem_Iron, 0, 0, 0)]
        [TestCase(CreatureConstants.Golem_Stone, 0, 0, 0)]
        [TestCase(CreatureConstants.Golem_Stone_Greater, 0, 0, 0)]
        [TestCase(CreatureConstants.Gorgon, 0, 0, 0)]
        [TestCase(CreatureConstants.GrayRender, 0, 0, 0)]
        [TestCase(CreatureConstants.GreenHag, 1, 1, 1)]
        [TestCase(CreatureConstants.Grick, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Griffon, 0, 0, 0)]
        [TestCase(CreatureConstants.Grig, 0, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Grimlock, 1, 1, 1)]
        [TestCase(CreatureConstants.Grimlock_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Gynosphinx, 2, 2, 2)]
        [TestCase(CreatureConstants.BarbedDevil_Hamatula, 1, 1, 1)]
        [TestCase(CreatureConstants.Hawk, 0, 0, 0)]
        [TestCase(CreatureConstants.Harpy, 1, 1, 1)]
        [TestCase(CreatureConstants.HarpyArcher, 1, 1, 1)]
        [TestCase(CreatureConstants.Hellcat_Bezekira, 0, 0, 0)]
        [TestCase(CreatureConstants.HellHound, 0, 0, 0)]
        [TestCase(CreatureConstants.NessianWarhound, 0, 0, 0)]
        [TestCase(CreatureConstants.Hellwasp_Swarm, 0, 0, 0)]
        [TestCase(CreatureConstants.Hezrou, 1, 1, 1)]
        [TestCase(CreatureConstants.Hieracosphinx, 0, 0, 0)]
        [TestCase(CreatureConstants.Hippogriff, 0, 0, 0)]
        [TestCase(CreatureConstants.Hobgoblin_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Hobgoblin_Leader_4thTo6th, 1, 1, 1)]
        [TestCase(CreatureConstants.Hobgoblin_Leader_6thTo8th, 1, 1, 1)]
        [TestCase(CreatureConstants.Hobgoblin_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Hobgoblin_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Homunculus, 0, 0, 0)]
        [TestCase(CreatureConstants.Horse_Heavy, 0, 0, 0)]
        [TestCase(CreatureConstants.Horse_Heavy_War, 0, 0, 0)]
        [TestCase(CreatureConstants.Horse_Light, 0, 0, 0)]
        [TestCase(CreatureConstants.Horse_Light_War, 0, 0, 0)]
        [TestCase(CreatureConstants.HoundArchon, 0, 2, 1)]
        [TestCase(CreatureConstants.HoundArchon_Hero, 1, 1, 1)]
        [TestCase(CreatureConstants.Howler, 0, 0, 0)]
        [TestCase(CreatureConstants.Hydra_5Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_6Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_7Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_8Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_9Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_10Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_11Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hydra_12Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Hyena, 0, 0, 0)]
        [TestCase(CreatureConstants.Imp, 0, 0, 0)]
        [TestCase(CreatureConstants.InvisibleStalker, 0, 0, 0)]
        [TestCase(CreatureConstants.Kobold_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Kobold_Leader_4thTo6th, 1, 1, 1)]
        [TestCase(CreatureConstants.Kobold_Leader_6thTo8th, 1, 1, 1)]
        [TestCase(CreatureConstants.Kobold_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Kobold_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Kolyarut, 0, 0, 0)]
        [TestCase(CreatureConstants.Kraken, 3, 3, 3)]
        [TestCase(CreatureConstants.Krenshar, 0, 0, 0)]
        [TestCase(CreatureConstants.KuoToa, 1, 1, 1)]
        [TestCase(CreatureConstants.KuoToa_Fighter_10th, 1, 1, 1)]
        [TestCase(CreatureConstants.KuoToa_Fighter_8th, 1, 1, 1)]
        [TestCase(CreatureConstants.KuoToa_Monitor, 1, 1, 1)]
        [TestCase(CreatureConstants.KuoToa_Whip_10th, 1, 1, 1)]
        [TestCase(CreatureConstants.KuoToa_Whip_3rd, 1, 1, 1)]
        [TestCase(CreatureConstants.ChainDevil_Kyton, 1, 1, 1)]
        [TestCase(CreatureConstants.Janni, 1, 1, 1)]
        [TestCase(CreatureConstants.Lamia, 1, 1, 1)]
        [TestCase(CreatureConstants.Lammasu, 1, 1, 1)]
        [TestCase(CreatureConstants.Lammasu_GoldenProtector, 1, 1, 1)]
        [TestCase(CreatureConstants.LanternArchon, 0, 0, 0)]
        [TestCase(CreatureConstants.Lemure, 0, 0, 0)]
        [TestCase(CreatureConstants.Leonal, 0, 2, 1)]
        [TestCase(CreatureConstants.Leopard, 0, 0, 0)]
        [TestCase(CreatureConstants.Lich_Level1, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level2, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level3, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level4, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level5, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level6, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level7, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level8, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level9, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level10, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level11, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level12, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level13, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level14, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level15, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level16, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level17, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level18, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level19, 1, 2, 2)]
        [TestCase(CreatureConstants.Lich_Level20, 1, 2, 2)]
        [TestCase(CreatureConstants.Lillend, 1, 1, 1)]
        [TestCase(CreatureConstants.Lion, 0, 0, 0)]
        [TestCase(CreatureConstants.Lion_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Lizardfolk, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Lizardfolk_Leader_3rdTo6th, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Lizardfolk_Leader_4thTo10th, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Lizardfolk_Lieutenant, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Lizard, 0, 0, 0)]
        [TestCase(CreatureConstants.Lizard_Monitor, 0, 0, 0)]
        [TestCase(CreatureConstants.Locathah_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Locathah_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Locathah_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Locathah_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Locathah_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Locust_Swarm, 0, 0, 0)]
        [TestCase(CreatureConstants.Magmin, 1, 1, 1)]
        [TestCase(CreatureConstants.MantaRay, 0, 0, 0)]
        [TestCase(CreatureConstants.Manticore, 1, 1, 1)]
        [TestCase(CreatureConstants.Marilith, 2, 1, 2)]
        [TestCase(CreatureConstants.Marut, 0, 0, 0)]
        [TestCase(CreatureConstants.Medusa, 2, 2, 2)]
        [TestCase(CreatureConstants.Mephit_CR3, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Air, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Dust, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Earth, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Fire, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Ice, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Magma, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Ooze, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Salt, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Steam, 1, 1, 1)]
        [TestCase(CreatureConstants.Mephit_Water, 1, 1, 1)]
        [TestCase(CreatureConstants.Merfolk_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Merfolk_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Merfolk_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Merfolk_Lieutenant_3rd, 1, 1, 1)]
        [TestCase(CreatureConstants.Merfolk_Lieutenant_5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Merfolk_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Mimic, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.MindFlayer, 2, 2, 2)]
        [TestCase(CreatureConstants.MindFlayer_Sorcerer, 2, 2, 2)]
        [TestCase(CreatureConstants.Minotaur, 1, 1, 1)]
        [TestCase(CreatureConstants.Mohrg, 0, 0, 0)]
        [TestCase(CreatureConstants.Monkey, 0, 0, 0)]
        [TestCase(CreatureConstants.Monkey_Celestial, 0, 0, 0)]
        [TestCase(CreatureConstants.Mule, 0, 0, 0)]
        [TestCase(CreatureConstants.Mummy, 1, 1, 1)]
        [TestCase(CreatureConstants.MummyLord, 1, 1, 1)]
        [TestCase(CreatureConstants.Naga_Dark, 1, 1, 1)]
        [TestCase(CreatureConstants.Naga_Guardian, 1, 1, 1)]
        [TestCase(CreatureConstants.Naga_Spirit, 1, 1, 1)]
        [TestCase(CreatureConstants.Naga_Water, 1, 1, 1)]
        [TestCase(CreatureConstants.Nalfeshnee, 2, 1, 2)]
        [TestCase(CreatureConstants.NightHag, 1, 1, 1)]
        [TestCase(CreatureConstants.Nightcrawler, 1, 1, 1)]
        [TestCase(CreatureConstants.Nightmare, 0, 0, 0)]
        [TestCase(CreatureConstants.Nightmare_Cauchemar, 0, 0, 0)]
        [TestCase(CreatureConstants.Nightwalker, 1, 1, 1)]
        [TestCase(CreatureConstants.Nightwing, 1, 1, 1)]
        [TestCase(CreatureConstants.Nixie, 0, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Nymph, 1, 1, 1)]
        [TestCase(CreatureConstants.Octopus, 0, 0, 0)]
        [TestCase(CreatureConstants.Octopus_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Ogre, 1, 1, 1)]
        [TestCase(CreatureConstants.Ogre_Barbarian, 1, 1, 1)]
        [TestCase(CreatureConstants.Ogre_Merrow, 1, 1, 1)]
        [TestCase(CreatureConstants.Ogre_Merrow_Barbarian, 1, 1, 1)]
        [TestCase(CreatureConstants.OgreMage, 2, 2, 2)]
        [TestCase(CreatureConstants.Ooze_Gray, 0, 0, 0)]
        [TestCase(CreatureConstants.Ooze_OchreJelly, 0, 0, 0)]
        [TestCase(CreatureConstants.Orc_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Half_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Half_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Half_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Half_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Orc_Half_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.BoneDevil_Osyluth, 1, 1, 1)]
        [TestCase(CreatureConstants.Otyugh, 1, 1, 1)]
        [TestCase(CreatureConstants.Owl, 0, 0, 0)]
        [TestCase(CreatureConstants.Owl_Celestial, 0, 0, 0)]
        [TestCase(CreatureConstants.Owl_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Owlbear, 0, 0, 0)]
        [TestCase(CreatureConstants.Pegasus, 0, 0, 0)]
        [TestCase(CreatureConstants.PhantomFungus, 0, 0, 0)]
        [TestCase(CreatureConstants.PhaseSpider, 0, 0, 0)]
        [TestCase(CreatureConstants.Phasm, 1, 1, 1)]
        [TestCase(CreatureConstants.PitFiend, 2, 1, 2)]
        [TestCase(CreatureConstants.Pixie, 0, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pixie_WithIrresistableDance, 0, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Planetar, 0, 2, 1)]
        [TestCase(CreatureConstants.Porpoise, 0, 0, 0)]
        [TestCase(CreatureConstants.Porpoise_Celestial, 0, 0, 0)]
        [TestCase(CreatureConstants.PrayingMantis_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Pseudodragon, 0, 0, 0)]
        [TestCase(CreatureConstants.PurpleWorm, 0, TreasureConstants.FiftyPercent, 0)]
        [TestCase(CreatureConstants.Pyrohydra_5Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_6Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_7Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_8Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_9Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_10Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_11Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Pyrohydra_12Heads, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Quasit, 0, 0, 0)]
        [TestCase(CreatureConstants.Rakshasa, 1, 2, 1)]
        [TestCase(CreatureConstants.Rast, 0, 0, 0)]
        [TestCase(CreatureConstants.Rat, 0, 0, 0)]
        [TestCase(CreatureConstants.Rat_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Rat_Dire_Fiendish, 0, 0, 0)]
        [TestCase(CreatureConstants.Rat_Swarm, 0, 0, 0)]
        [TestCase(CreatureConstants.Raven, 0, 0, 0)]
        [TestCase(CreatureConstants.Raven_Fiendish, 0, 0, 0)]
        [TestCase(CreatureConstants.Ravid, 0, 0, 0)]
        [TestCase(CreatureConstants.RazorBoar, 0, 0, 0)]
        [TestCase(CreatureConstants.Remorhaz, 0, 0, 0)]
        [TestCase(CreatureConstants.Retriever, 0, 0, 0)]
        [TestCase(CreatureConstants.Rhinoceras, 0, 0, 0)]
        [TestCase(CreatureConstants.Roc, 0, 0, 0)]
        [TestCase(CreatureConstants.Roper, 0, TreasureConstants.FiftyPercent, 0)]
        [TestCase(CreatureConstants.RustMonster, 0, 0, 0)]
        [TestCase(CreatureConstants.Sahuagin, 1, 1, 1)]
        [TestCase(CreatureConstants.Sahuagin_Baron, 1, 1, 1)]
        [TestCase(CreatureConstants.Sahuagin_Chieftan, 1, 1, 1)]
        [TestCase(CreatureConstants.Sahuagin_Guard, 1, 1, 1)]
        [TestCase(CreatureConstants.Sahuagin_Lieutenant, 1, 1, 1)]
        [TestCase(CreatureConstants.Sahuagin_Noncombatant, 0, 0, 0)]
        [TestCase(CreatureConstants.Sahuagin_Priest, 1, 1, 1)]
        [TestCase(CreatureConstants.Sahuagin_Underpriest, 1, 1, 1)]
        [TestCase(CreatureConstants.Salamander_Noble, 2, 2, 2)]
        [TestCase(CreatureConstants.Salamander_Average, 1, 1, 1)]
        [TestCase(CreatureConstants.Salamander_Flamebrother, 1, 1, 1)]
        [TestCase(CreatureConstants.Satyr, 1, 1, 1)]
        [TestCase(CreatureConstants.Satyr_WithPipes, 1, 1, 1)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Colossal, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Gargantuan, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Huge, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Large, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Scorpion_Monstrous_Tiny, 0, 0, 0)]
        [TestCase(CreatureConstants.Scorpionfolk, 1, 1, 1)]
        [TestCase(CreatureConstants.Scorpionfolk_Cleric, 1, 1, 1)]
        [TestCase(CreatureConstants.Scorpionfolk_Ranger_3rdTo5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Scorpionfolk_Ranger_6thTo8th, 1, 1, 1)]
        [TestCase(CreatureConstants.SeaCat, 0, 0, 0)]
        [TestCase(CreatureConstants.SeaHag, 1, 1, 1)]
        [TestCase(CreatureConstants.Shadow, 0, 0, 0)]
        [TestCase(CreatureConstants.Shadow_Greater, 0, 0, 0)]
        [TestCase(CreatureConstants.ShadowMastiff, 0, 0, 0)]
        [TestCase(CreatureConstants.ShamblingMound, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Shark_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Shark_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Shark_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Shark_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.ShieldGuardian, 0, 0, 0)]
        [TestCase(CreatureConstants.ShockerLizard, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Shrieker, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Chimera, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Dragon_Red_YoungAdult, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Ettin, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Giant_Cloud, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Human, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Megaraptor, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Owlbear, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Troll, 0, 0, 0)]
        [TestCase(CreatureConstants.Skeleton_Wolf, 0, 0, 0)]
        [TestCase(CreatureConstants.Skum, 0, 0, 0)]
        [TestCase(CreatureConstants.Slaad_Death, 2, 2, 2)]
        [TestCase(CreatureConstants.Slaad_Green, 1, 1, 1)]
        [TestCase(CreatureConstants.Slaad_Blue, 1, 1, 1)]
        [TestCase(CreatureConstants.Slaad_Gray, 2, 2, 2)]
        [TestCase(CreatureConstants.Slaad_Red, 1, 1, 1)]
        [TestCase(CreatureConstants.Snake_Constrictor, 0, 0, 0)]
        [TestCase(CreatureConstants.Snake_Constrictor_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Snake_Viper_Huge, 0, 0, 0)]
        [TestCase(CreatureConstants.Snake_Viper_Large, 0, 0, 0)]
        [TestCase(CreatureConstants.Snake_Viper_Medium, 0, 0, 0)]
        [TestCase(CreatureConstants.Snake_Viper_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Snake_Viper_Tiny, 0, 0, 0)]
        [TestCase(CreatureConstants.Solar, 0, 2, 1)]
        [TestCase(CreatureConstants.Spectre, 0, 0, 0)]
        [TestCase(CreatureConstants.SpiderEater, 0, 0, 0)]
        [TestCase(CreatureConstants.Spider_Monstrous_Colossal, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Spider_Monstrous_Gargantuan, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Spider_Monstrous_Huge, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Spider_Monstrous_Large, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Spider_Monstrous_Medium, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Spider_Monstrous_Small, 0, 0, 0)]
        [TestCase(CreatureConstants.Spider_Monstrous_Tiny, 0, 0, 0)]
        [TestCase(CreatureConstants.Spider_Swarm, 0, 0, 0)]
        [TestCase(CreatureConstants.Squid, 0, 0, 0)]
        [TestCase(CreatureConstants.Squid_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.StagBeetle_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Stirge, 0, 0, 0)]
        [TestCase(CreatureConstants.Succubus, 1, 1, 1)]
        [TestCase(CreatureConstants.Svirfneblin_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Svirfneblin_Captain, 1, 1, 1)]
        [TestCase(CreatureConstants.Svirfneblin_Leader, 1, 1, 1)]
        [TestCase(CreatureConstants.Svirfneblin_Lieutenant_3rd, 1, 1, 1)]
        [TestCase(CreatureConstants.Svirfneblin_Lieutenant_5th, 1, 1, 1)]
        [TestCase(CreatureConstants.Svirfneblin_Sergeant, 1, 1, 1)]
        [TestCase(CreatureConstants.Tarrasque, 0, 0, 0)]
        [TestCase(CreatureConstants.Tendriculos, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Thoqqua, 0, 0, 0)]
        [TestCase(CreatureConstants.Tiefling_Warrior, 1, 1, 1)]
        [TestCase(CreatureConstants.Tiger, 0, 0, 0)]
        [TestCase(CreatureConstants.Tiger_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Titan, 2, 2, 2)]
        [TestCase(CreatureConstants.Tojanida_Adult, 1, 1, 1)]
        [TestCase(CreatureConstants.Tojanida_Elder, 1, 1, 1)]
        [TestCase(CreatureConstants.Tojanida_Juvenile, 1, 1, 1)]
        [TestCase(CreatureConstants.Deinonychus, 0, 0, 0)]
        [TestCase(CreatureConstants.Megaraptor, 0, 0, 0)]
        [TestCase(CreatureConstants.Treant, 1, 1, 1)]
        [TestCase(CreatureConstants.Triceratops, 0, 0, 0)]
        [TestCase(CreatureConstants.Triton, 1, 1, 1)]
        [TestCase(CreatureConstants.Tyrannosaurus, 0, 0, 0)]
        [TestCase(CreatureConstants.Troglodyte, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Troll, 1, 1, 1)]
        [TestCase(CreatureConstants.Troll_Hunter, 1, 1, 1)]
        [TestCase(CreatureConstants.Troll_Scrag, 1, 1, 1)]
        [TestCase(CreatureConstants.Troll_Scrag_Hunter, 1, 1, 1)]
        [TestCase(CreatureConstants.TrumpetArchon, 0, 2, 1)]
        [TestCase(CreatureConstants.UmberHulk, 1, 1, 1)]
        [TestCase(CreatureConstants.UmberHulk_TrulyHorrid, 1, 1, 1)]
        [TestCase(CreatureConstants.Unicorn, 0, 0, 0)]
        [TestCase(CreatureConstants.Unicorn_CelestialCharger, 0, 0, 0)]
        [TestCase(CreatureConstants.VampireSpawn, 1, 1, 1)]
        [TestCase(CreatureConstants.Vampire_Level1, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level2, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level3, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level4, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level5, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level6, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level7, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level8, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level9, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level10, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level11, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level12, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level13, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level14, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level15, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level16, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level17, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level18, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level19, 2, 2, 2)]
        [TestCase(CreatureConstants.Vampire_Level20, 2, 2, 2)]
        [TestCase(CreatureConstants.Vargouille, 0, 0, 0)]
        [TestCase(CreatureConstants.VioletFungus, 0, 0, 0)]
        [TestCase(CreatureConstants.Vrock, 1, 1, 1)]
        [TestCase(CreatureConstants.Pony_War, 0, 0, 0)]
        [TestCase(CreatureConstants.Wasp_Giant, 0, 0, 0)]
        [TestCase(CreatureConstants.Weasel, 0, 0, 0)]
        [TestCase(CreatureConstants.Weasel_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Werebear, 1, 1, 1)]
        [TestCase(CreatureConstants.Wereboar, 1, 1, 1)]
        [TestCase(CreatureConstants.Wereboar_HillGiantDire, 1, 1, 1)]
        [TestCase(CreatureConstants.Wererat, 1, 1, 1)]
        [TestCase(CreatureConstants.Weretiger, 1, 1, 1)]
        [TestCase(CreatureConstants.Werewolf, 1, 1, 1)]
        [TestCase(CreatureConstants.WerewolfLord, 1, 1, 1)]
        [TestCase(CreatureConstants.Whale_Baleen, 0, 0, 0)]
        [TestCase(CreatureConstants.Whale_Cachalot, 0, 0, 0)]
        [TestCase(CreatureConstants.Whale_Orca, 0, 0, 0)]
        [TestCase(CreatureConstants.Wight, 0, 0, 0)]
        [TestCase(CreatureConstants.WillOWisp, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.WinterWolf, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Wolf, 0, 0, 0)]
        [TestCase(CreatureConstants.Wolf_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Wolverine, 0, 0, 0)]
        [TestCase(CreatureConstants.Wolverine_Dire, 0, 0, 0)]
        [TestCase(CreatureConstants.Worg, TreasureConstants.TenPercent, TreasureConstants.FiftyPercent, TreasureConstants.FiftyPercent)]
        [TestCase(CreatureConstants.Wraith, 0, 0, 0)]
        [TestCase(CreatureConstants.Wraith_Dread, 0, 0, 0)]
        [TestCase(CreatureConstants.Wyvern, 1, 1, 1)]
        [TestCase(CreatureConstants.Xill, 1, 1, 1)]
        [TestCase(CreatureConstants.Xorn_Average, 0, 0, 0)]
        [TestCase(CreatureConstants.Xorn_Elder, 0, 0, 0)]
        [TestCase(CreatureConstants.Xorn_Minor, 0, 0, 0)]
        [TestCase(CreatureConstants.YethHound, 0, 0, 0)]
        [TestCase(CreatureConstants.Yrthak, 0, 0, 0)]
        [TestCase(CreatureConstants.YuanTi_Abomination, 2, 2, 2)]
        [TestCase(CreatureConstants.YuanTi_Halfblood, 2, 2, 2)]
        [TestCase(CreatureConstants.YuanTi_Pureblood, 2, 2, 2)]
        [TestCase(CreatureConstants.Zelekhut, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Human, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Bugbear, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_GrayRender, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Kobold, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Minotaur, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Ogre, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Troglodyte, 0, 0, 0)]
        [TestCase(CreatureConstants.Zombie_Wyvern, 0, 0, 0)]
        public void TreasureAdjustments(string entry, double coin, double goods, double items)
        {
            var collection = new[]
            {
                Convert.ToString(coin),
                Convert.ToString(goods),
                Convert.ToString(items)
            };

            base.OrderedCollection(entry, collection);
        }

        [Test]
        public void CharactersWithoutBaseRacesOrMetaracesHaveNoTreasure()
        {
            var entries = GetEntries();
            var characters = entries.Where(e => IsCharacter(e, false, false));

            foreach (var character in characters)
            {
                var adjustments = GetCollection(character).Select(a => Convert.ToDouble(a));
                Assert.That(adjustments, Is.All.EqualTo(0), character);
            }
        }

        private bool IsCharacter(string creature, bool hasBaseRace, bool hasMetarace)
        {
            var name = encounterFormatter.SelectNameFrom(creature);
            var baseRace = encounterFormatter.SelectBaseRaceFrom(creature);
            var metarace = encounterFormatter.SelectMetaraceFrom(creature);

            return name == CreatureConstants.Character && baseRace.Any() == hasBaseRace && metarace.Any() == hasMetarace;
        }

        [Test]
        public void CharactersWithBaseRacesHaveTreasure()
        {
            var entries = GetEntries();
            var characters = entries.Where(e => IsCharacter(e, true, false));

            foreach (var character in characters)
            {
                var adjustments = GetCollection(character).Select(a => Convert.ToDouble(a));
                Assert.That(adjustments, Is.All.Positive, character);
            }
        }

        [Test]
        public void NoncombatantsDoNotHaveTreasure()
        {
            var entries = GetEntries();
            var noncombatants = entries.Where(e => e.Contains(CreatureConstants.Noncombatant));

            foreach (var noncombatant in noncombatants)
            {
                var adjustments = GetCollection(noncombatant).Select(a => Convert.ToDouble(a));
                Assert.That(adjustments, Is.All.EqualTo(0), noncombatant);
            }
        }
    }
}
